<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class Create{{ name | plural | pascal }}Table extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('{{ name | plural | snake }}', function (Blueprint $table) {
            $table->bigIncrements('id');
            {% for field in fields %}
                {% if field.type == 'text' %}
                    $table->string('{{ field.name }}')
                    {%- if field.nullable %}->nullable(){% endif %}
                    {%- if field.default %}->default(){% endif %};
                {% elif field.type == 'textarea' or field.type == 'editor' %}
                    $table->text('{{ field.name }}')
                    {%- if field.nullable %}->nullable(){% endif %}
                    {%- if field.default %}->default(){% endif %};
                {% elif field.type == 'date' %}
                    $table->timestamp('{{ field.name }}')
                    {%- if field.nullable %}->nullable(){% endif %}
                    {%- if field.default %}->default(){% endif %};
                {% endif %}
            {% endfor %}

            {%- for feature in features %}
                {% if feature.type == 'sort' %}
                    $table->unsignedInteger('{{ feature.options.order_field }});
                {% endif %}
                {% if feature.type == 'slug' %}
                    $table->string('{{ feature.options.save_to_field }})->nullable();
                {% endif %}
                {% if feature.type="draft" %}
                    $table->timestamp('{{ feature.options.published_at_field }}')->nullable();
                {% endif %}
            {% endfor %}}
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('{{ name | plural | snake }}');
    }
}
