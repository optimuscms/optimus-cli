<?php

namespace App\PageTemplates;

use App\Contracts\PageTemplate;
use App\Http\Resources\MediaResource;
use App\Models\Page;

class {{ name | pascal }}Template implements PageTemplate
{
    public static function getId(): string
    {
        return '{{ id}}';
    }

    public static function getName(): string
    {
        return '{{ name }}';
    }

    public static function validateData(array $data)
    {
        validator($data, [
            {% for field in fields %}
                {% if field.type == 'text' %}
                    '{{ field.name }}' => '{% if field.rules.required %}required|{% endif %}string|max:255',
                {% elif in_array(field.type, ['textarea', 'editor']) %}
                    '{{ field.name }}' => '{% if field.rules.required %}required|{% endif %}string',
                {% elif field.type == 'date' %}
                    '{{ field.name }}' => '{% if field.rules.required %}required|{% endif %}date',
                {% elif field.type == 'media' %}
                    '{{ field.name }}_id' => '{% if field.rules.required %}required|{% endif %}exists:media,id',
                {% endif %}
            {% endfor %}
        ])->validate();
    }

    public static function saveData(Page $page, array $data)
    {
        $page->addContents([
            {% for field in fields %}
                {% if field.type != 'media' %}
                    '{{ field.name }}' => $data['{{ field.name }}'],
                {% endif %}
            {% endfor %}
        ]);

        {% for field in fields %}
            {% if field.type == 'media' %}
                $page->attachMedia($data['{{ field.name }}_id'], '{{ field.options.media_group }}', [
                    {% for conversion in field.options.conversions %}
                        '{{ conversion }}',
                    {% endfor %}
                ]);
            {% endif %}
        {% endfor %}
    }

    public static function resetData(Page $page)
    {
        $page->clearContents();
        $page->detachMedia();
    }

    public static function getData(Page $page): array
    {
        return [
            {% for field in fields %}
                {% if field.type != 'media' %}
                    '{{ field.name }}' => $page->getContent('{{ field.name }}'),
                {% else %}
                    '{{ field.name }}_id' => new MediaResource($page->getFirstMedia('{{ field.options.media_group }}')),
                {% endif %}
            {% endfor %}
        ];
    }

    public static function render(Page $page)
    {
        return view('front.{{ id }}', compact('page'));
    }
}
